services:
  broker-service:
    build:
      context: ./broker-service
      dockerfile: broker-service.Dockerfile
    restart: always
    ports:
      - "8070:8070"
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    build:
      context: ./auth-service
      dockerfile: auth-service.Dockerfile
    restart: always
    ports:
      - "8071:8071"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DSN=${DSN}
  
  logger-service:
    build:
      context: ./logger-service
      dockerfile: logger-service.Dockerfile
    restart: always
    ports:
      - "8072:8072"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_URL: ${MONGO_URL}
      MONGO_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_PASSWORD: ${MONGO_ROOT_PASSWORD}

  mail-service:
    build:
      context: ./mail-service
      dockerfile: mail-service.Dockerfile
    restart: always
    ports:
      - "8073:8073"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: ${MAIL_DOMAIN}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}

  front-end:
    build:
      context: ./front-end
      dockerfile: front-end.Dockerfile
    restart: always
    ports:
      - "8069:8069"
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mongo:
    image: 'mongo:8.0.15'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db

  mailhog:
    image: 'mailhog/mailhog:v1.0.1'
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  postgres-data:
  mongo-data: